
# This file is automatically generated. Please do not modify.

from ..distro import AsciiArt

def detect(name: str) -> AsciiArt:
    if name.startswith('AIX'):
        from .aix import aix
        return aix
    
    if name.startswith('Aperio GNU/Linux'):
        from .aperio_gnu_linux import aperio_gnu_linux
        return aperio_gnu_linux
    
    if name.startswith('Asahi'):
        from .asahi import asahi
        return asahi
    
    if name.startswith('Hash'):
        from .hash import hash
        return hash
    
    if name.startswith('HarDClanZ'):
        from .hardclanz import hardclanz
        return hardclanz
    
    if name.startswith('AlmaLinux'):
        from .almalinux import almalinux
        return almalinux
    
    if name.startswith('Exodia Predator OS') or name.startswith('exodia-predator') or name.startswith('Predator'):
        from .exodia_predator_os import exodia_predator_os
        return exodia_predator_os
    
    if name == 'alpine_small':
        from .alpine_small import alpine_small
        return alpine_small
    
    if name.startswith('Alpine'):
        from .alpine import alpine
        return alpine
    
    if name.startswith('Alter'):
        from .alter import alter
        return alter
    
    if name.startswith('Amazon'):
        from .amazon import amazon
        return amazon
    
    if name.startswith('AmogOS'):
        from .amogos import amogos
        return amogos
    
    if name.startswith('Anarchy'):
        from .anarchy import anarchy
        return anarchy
    
    if name.startswith('android_small'):
        from .android_small import android_small
        return android_small
    
    if name.startswith('Android'):
        from .android import android
        return android
    
    if name.startswith('instantOS'):
        from .instantos import instantos
        return instantos
    
    if name.startswith('Antergos'):
        from .antergos import antergos
        return antergos
    
    if name.startswith('antiX'):
        from .antix import antix
        return antix
    
    if name.startswith('AOSC OS/Retro'):
        from .aosc_os_retro import aosc_os_retro
        return aosc_os_retro
    
    if name == 'aoscosretro_small':
        from .aoscosretro_small import aoscosretro_small
        return aoscosretro_small
    
    if name.startswith('AOSC OS'):
        from .aosc_os import aosc_os
        return aosc_os
    
    if name.startswith('Apricity'):
        from .apricity import apricity
        return apricity
    
    if name.startswith('Archcraft'):
        from .archcraft import archcraft
        return archcraft
    
    if name.startswith('arcolinux_small'):
        from .arcolinux_small import arcolinux_small
        return arcolinux_small
    
    if name.startswith('ArcoLinux'):
        from .arcolinux import arcolinux
        return arcolinux
    
    if name == 'arch_small':
        from .arch_small import arch_small
        return arch_small
    
    if name == 'arch_old':
        from .arch_old import arch_old
        return arch_old
    
    if name.startswith('ArchBox'):
        from .archbox import archbox
        return archbox
    
    if name.startswith('ARCHlabs'):
        from .archlabs import archlabs
        return archlabs
    
    if name.startswith('ArchStrike'):
        from .archstrike import archstrike
        return archstrike
    
    if name.startswith('astOS'):
        from .astos import astos
        return astos
    
    if (name.startswith('XFerience') or name.endswith('XFerience')):
        from .xferience import xferience
        return xferience
    
    if name.startswith('Stock Linux'):
        from .stock_linux import stock_linux
        return stock_linux
    
    if name.startswith('ArchMerge'):
        from .archmerge import archmerge
        return archmerge
    
    if name.startswith('Arch'):
        from .arch import arch
        return arch
    
    if name.startswith('artix_small'):
        from .artix_small import artix_small
        return artix_small
    
    if name.startswith('Artix'):
        from .artix import artix
        return artix
    
    if name.startswith('Cobalt'):
        from .cobalt import cobalt
        return cobalt
    
    if name.startswith('Arya'):
        from .arya import arya
        return arya
    
    if name.startswith('AsteroidOS'):
        from .asteroidos import asteroidos
        return asteroidos
    
    if name.startswith('Aster'):
        from .aster import aster
        return aster
    
    if name.startswith('Bedrock'):
        from .bedrock import bedrock
        return bedrock
    
    if name.startswith('BigLinux'):
        from .biglinux import biglinux
        return biglinux
    
    if name.startswith('Bitrig'):
        from .bitrig import bitrig
        return bitrig
    
    if name.startswith('BlackArch'):
        from .blackarch import blackarch
        return blackarch
    
    if name.startswith('blackPanther') or name.startswith('blackpanther'):
        from .blackpanther import blackpanther
        return blackpanther
    
    if name.startswith('MatuusOS'):
        from .matuusos import matuusos
        return matuusos
    
    if name.startswith('BLAG'):
        from .blag import blag
        return blag
    
    if name.startswith('BlankOn'):
        from .blankon import blankon
        return blankon
    
    if name.startswith('BlueLight'):
        from .bluelight import bluelight
        return bluelight
    
    if name.startswith('Bodhi'):
        from .bodhi import bodhi
        return bodhi
    
    if name.startswith('bonsai'):
        from .bonsai import bonsai
        return bonsai
    
    if name == 'BSD':
        from .bsd import bsd
        return bsd
    
    if name.startswith('BunsenLabs'):
        from .bunsenlabs import bunsenlabs
        return bunsenlabs
    
    if name.startswith('CachyOS'):
        from .cachyos import cachyos
        return cachyos
    
    if name.startswith('Calculate'):
        from .calculate import calculate
        return calculate
    
    if name.startswith('Carbs'):
        from .carbs import carbs
        return carbs
    
    if name == 'CalinixOS':
        from .calinixos import calinixos
        return calinixos
    
    if name.startswith('CalinixOS_small'):
        from .calinixos_small import calinixos_small
        return calinixos_small
    
    if name.startswith('CBL-Mariner'):
        from .cbl_mariner import cbl_mariner
        return cbl_mariner
    
    if name.startswith('CelOS'):
        from .celos import celos
        return celos
    
    if name.startswith('centos_small'):
        from .centos_small import centos_small
        return centos_small
    
    if name.startswith('CentOS'):
        from .centos import centos
        return centos
    
    if name.startswith('Center'):
        from .center import center
        return center
    
    if name.startswith('Chakra'):
        from .chakra import chakra
        return chakra
    
    if name.startswith('ChaletOS'):
        from .chaletos import chaletos
        return chaletos
    
    if name.startswith('Chapeau'):
        from .chapeau import chapeau
        return chapeau
    
    if name.startswith('ChonkySealOS'):
        from .chonkysealos import chonkysealos
        return chonkysealos
    
    if name.startswith('Chrom'):
        from .chrom import chrom
        return chrom
    
    if name.startswith('cleanjaro_small'):
        from .cleanjaro_small import cleanjaro_small
        return cleanjaro_small
    
    if name.startswith('Cleanjaro'):
        from .cleanjaro import cleanjaro
        return cleanjaro
    
    if name.startswith('ClearOS'):
        from .clearos import clearos
        return clearos
    
    if name.startswith('Clear Linux OS') or name.startswith('Clear_Linux'):
        from .clear_linux_os import clear_linux_os
        return clear_linux_os
    
    if name.startswith('Clover'):
        from .clover import clover
        return clover
    
    if name.startswith('Condres'):
        from .condres import condres
        return condres
    
    if name.startswith('Container Linux by CoreOS') or name.startswith('Container_Linux'):
        from .container_linux_by_coreos import container_linux_by_coreos
        return container_linux_by_coreos
    
    if name == 'crux_small' or name.startswith('KISS'):
        from .crux_small import crux_small
        return crux_small
    
    if name.startswith('CRUX'):
        from .crux import crux
        return crux
    
    if (name.startswith('Crystal Linux') or name.endswith('Crystal Linux')):
        from .crystal_linux import crystal_linux
        return crystal_linux
    
    if (name.startswith('Cucumber') or name.endswith('Cucumber')):
        from .cucumber import cucumber
        return cucumber
    
    if name.startswith('CutefishOS'):
        from .cutefishos import cutefishos
        return cutefishos
    
    if name.startswith('CyberOS'):
        from .cyberos import cyberos
        return cyberos
    
    if name.startswith('dahlia'):
        from .dahlia import dahlia
        return dahlia
    
    if name == 'debian_small':
        from .debian_small import debian_small
        return debian_small
    
    if name.startswith('Debian'):
        from .debian import debian
        return debian
    
    if name.startswith('Droidian'):
        from .droidian import droidian
        return droidian
    
    if name.startswith('Deepin'):
        from .deepin import deepin
        return deepin
    
    if name == 'DesaOS':
        from .desaos import desaos
        return desaos
    
    if name.startswith('Devuan'):
        from .devuan import devuan
        return devuan
    
    if name.startswith('DietPi'):
        from .dietpi import dietpi
        return dietpi
    
    if name.startswith('DracOS'):
        from .dracos import dracos
        return dracos
    
    if name == 'DarkOs':
        from .darkos import darkos
        return darkos
    
    if name.startswith('Itc'):
        from .itc import itc
        return itc
    
    if name.startswith('dragonfly_old'):
        from .dragonfly_old import dragonfly_old
        return dragonfly_old
    
    if name.startswith('dragonfly_small'):
        from .dragonfly_small import dragonfly_small
        return dragonfly_small
    
    if name.startswith('DragonFly'):
        from .dragonfly import dragonfly
        return dragonfly
    
    if name.startswith('Drauger'):
        from .drauger import drauger
        return drauger
    
    if name.startswith('elementary_small'):
        from .elementary_small import elementary_small
        return elementary_small
    
    if name.startswith('Elementary'):
        from .elementary import elementary
        return elementary
    
    if name.startswith('Elive'):
        from .elive import elive
        return elive
    
    if name.startswith('EndeavourOS'):
        from .endeavouros import endeavouros
        return endeavouros
    
    if name.startswith('EncryptOS'):
        from .encryptos import encryptos
        return encryptos
    
    if name.startswith('Endless'):
        from .endless import endless
        return endless
    
    if name.startswith('Enso'):
        from .enso import enso
        return enso
    
    if name.startswith('EuroLinux'):
        from .eurolinux import eurolinux
        return eurolinux
    
    if name.startswith('Exherbo'):
        from .exherbo import exherbo
        return exherbo
    
    if name == 'fedora_small':
        from .fedora_small import fedora_small
        return fedora_small
    
    if name.startswith('Fedora_old') or name.startswith('RFRemix'):
        from .fedora_old import fedora_old
        return fedora_old
    
    if name.startswith('Fedora'):
        from .fedora import fedora
        return fedora
    
    if name.startswith('Feren'):
        from .feren import feren
        return feren
    
    if name.startswith('Finnix'):
        from .finnix import finnix
        return finnix
    
    if name == 'freebsd_small':
        from .freebsd_small import freebsd_small
        return freebsd_small
    
    if name.startswith('FreeBSD') or name.startswith('HardenedBSD'):
        from .freebsd import freebsd
        return freebsd
    
    if name.startswith('FreeMiNT'):
        from .freemint import freemint
        return freemint
    
    if name.startswith('Frugalware'):
        from .frugalware import frugalware
        return frugalware
    
    if name.startswith('Funtoo'):
        from .funtoo import funtoo
        return funtoo
    
    if name.startswith('GalliumOS'):
        from .galliumos import galliumos
        return galliumos
    
    if name == 'garuda_small':
        from .garuda_small import garuda_small
        return garuda_small
    
    if name.startswith('Garuda'):
        from .garuda import garuda
        return garuda
    
    if name == 'gentoo_small':
        from .gentoo_small import gentoo_small
        return gentoo_small
    
    if name.startswith('Gentoo'):
        from .gentoo import gentoo
        return gentoo
    
    if name.startswith('Pentoo'):
        from .pentoo import pentoo
        return pentoo
    
    if name.startswith('glaucus'):
        from .glaucus import glaucus
        return glaucus
    
    if name.startswith('gNewSense'):
        from .gnewsense import gnewsense
        return gnewsense
    
    if name.startswith('GNOME'):
        from .gnome import gnome
        return gnome
    
    if name == 'GNU':
        from .gnu import gnu
        return gnu
    
    if name.startswith('GoboLinux'):
        from .gobolinux import gobolinux
        return gobolinux
    
    if name.startswith('GrapheneOS'):
        from .grapheneos import grapheneos
        return grapheneos
    
    if name.startswith('Grombyang'):
        from .grombyang import grombyang
        return grombyang
    
    if name.startswith('guix_small'):
        from .guix_small import guix_small
        return guix_small
    
    if name.startswith('Guix'):
        from .guix import guix
        return guix
    
    if name.startswith('haiku_small'):
        from .haiku_small import haiku_small
        return haiku_small
    
    if name.startswith('Haiku'):
        from .haiku import haiku
        return haiku
    
    if name.startswith('HamoniKR'):
        from .hamonikr import hamonikr
        return hamonikr
    
    if name.startswith('Huayra'):
        from .huayra import huayra
        return huayra
    
    if name.startswith('HydroOS'):
        from .hydroos import hydroos
        return hydroos
    
    if name.startswith('hyperbola_small'):
        from .hyperbola_small import hyperbola_small
        return hyperbola_small
    
    if name.startswith('Hyperbola'):
        from .hyperbola import hyperbola
        return hyperbola
    
    if name.startswith('iglunix') or name.startswith('iglu'):
        from .iglunix import iglunix
        return iglunix
    
    if name.startswith('januslinux') or name.startswith('janus') or name.startswith('Ataraxia Linux') or name.startswith('Ataraxia'):
        from .januslinux import januslinux
        return januslinux
    
    if name.startswith('Kaisen'):
        from .kaisen import kaisen
        return kaisen
    
    if name == 'kali_small' or name == 'kalilinux_small' or name == 'kali_linux_small':
        from .kali_small import kali_small
        return kali_small
    
    if name.startswith('Kali'):
        from .kali import kali
        return kali
    
    if name.startswith('KaOS'):
        from .kaos import kaos
        return kaos
    
    if name.startswith('KDE'):
        from .kde import kde
        return kde
    
    if name.startswith('Kibojoe'):
        from .kibojoe import kibojoe
        return kibojoe
    
    if name.startswith('Kogaion'):
        from .kogaion import kogaion
        return kogaion
    
    if name.startswith('Korora'):
        from .korora import korora
        return korora
    
    if name.startswith('KSLinux'):
        from .kslinux import kslinux
        return kslinux
    
    if name.startswith('Kubuntu'):
        from .kubuntu import kubuntu
        return kubuntu
    
    if name.startswith('LEDE'):
        from .lede import lede
        return lede
    
    if name == 'LangitKetujuh_old':
        from .langitketujuh_old import langitketujuh_old
        return langitketujuh_old
    
    if name.startswith('LangitKetujuh'):
        from .langitketujuh import langitketujuh
        return langitketujuh
    
    if name.startswith('LaxerOS'):
        from .laxeros import laxeros
        return laxeros
    
    if name.startswith('LibreELEC'):
        from .libreelec import libreelec
        return libreelec
    
    if name == 'Linux':
        from .linux import linux
        return linux
    
    if name.startswith('linuxlite_small'):
        from .linuxlite_small import linuxlite_small
        return linuxlite_small
    
    if name.startswith('Linux Lite') or name.startswith('Linux_Lite'):
        from .linux_lite import linux_lite
        return linux_lite
    
    if name.startswith('LMDE'):
        from .lmde import lmde
        return lmde
    
    if name.startswith('Lubuntu'):
        from .lubuntu import lubuntu
        return lubuntu
    
    if name.startswith('Lunar'):
        from .lunar import lunar
        return lunar
    
    if name == 'mac"*"_small':
        from .mac_small import mac_small
        return mac_small
    
    if name.startswith('mac') or name == 'Darwin':
        from .mac import mac
        return mac
    
    if name.startswith('mageia_small'):
        from .mageia_small import mageia_small
        return mageia_small
    
    if name.startswith('Mageia'):
        from .mageia import mageia
        return mageia
    
    if name.startswith('MagpieOS'):
        from .magpieos import magpieos
        return magpieos
    
    if name.startswith('Mandriva') or name.startswith('Mandrake'):
        from .mandriva import mandriva
        return mandriva
    
    if name.startswith('manjaro_small'):
        from .manjaro_small import manjaro_small
        return manjaro_small
    
    if name.startswith('Manjaro'):
        from .manjaro import manjaro
        return manjaro
    
    if name.startswith('MassOS'):
        from .massos import massos
        return massos
    
    if name.startswith('TeArch'):
        from .tearch import tearch
        return tearch
    
    if name.startswith('Maui'):
        from .maui import maui
        return maui
    
    if name.startswith('Mer'):
        from .mer import mer
        return mer
    
    if name.startswith('Minix'):
        from .minix import minix
        return minix
    
    if name.startswith('MIRACLE LINUX') or name.startswith('MIRACLE_LINUX'):
        from .miracle_linux import miracle_linux
        return miracle_linux
    
    if name.startswith('Linspire') or name.startswith('Freespire') or name.startswith('Lindows'):
        from .linspire import linspire
        return linspire
    
    if name.startswith('linuxmint_small'):
        from .linuxmint_small import linuxmint_small
        return linuxmint_small
    
    if name.startswith('Linux Mint Old') or name.startswith('LinuxMintOld') or name.startswith('mint_old'):
        from .linux_mint_old import linux_mint_old
        return linux_mint_old
    
    if name.startswith('Linux Mint') or name.startswith('LinuxMint') or name.startswith('mint'):
        from .linux_mint import linux_mint
        return linux_mint
    
    if name.startswith('Live Raizo') or name.startswith('Live_Raizo'):
        from .live_raizo import live_raizo
        return live_raizo
    
    if name.startswith('mx_small'):
        from .mx_small import mx_small
        return mx_small
    
    if name.startswith('MX'):
        from .mx import mx
        return mx
    
    if name.startswith('Namib'):
        from .namib import namib
        return namib
    
    if name.startswith('NekOS'):
        from .nekos import nekos
        return nekos
    
    if name.startswith('Neptune'):
        from .neptune import neptune
        return neptune
    
    if name.startswith('netbsd_small'):
        from .netbsd_small import netbsd_small
        return netbsd_small
    
    if name.startswith('NetBSD'):
        from .netbsd import netbsd
        return netbsd
    
    if name.startswith('Netrunner'):
        from .netrunner import netrunner
        return netrunner
    
    if name.startswith('Nitrux'):
        from .nitrux import nitrux
        return nitrux
    
    if name == 'nixos_small':
        from .nixos_small import nixos_small
        return nixos_small
    
    if name.startswith('nixos_old'):
        from .nixos_old import nixos_old
        return nixos_old
    
    if name.startswith('NixOS'):
        from .nixos import nixos
        return nixos
    
    if name.startswith('NomadBSD'):
        from .nomadbsd import nomadbsd
        return nomadbsd
    
    if name.startswith('GhostBSD'):
        from .ghostbsd import ghostbsd
        return ghostbsd
    
    if name.startswith('Nurunner'):
        from .nurunner import nurunner
        return nurunner
    
    if name.startswith('NuTyX'):
        from .nutyx import nutyx
        return nutyx
    
    if name.startswith('OBRevenge'):
        from .obrevenge import obrevenge
        return obrevenge
    
    if name.startswith('OmniOS'):
        from .omnios import omnios
        return omnios
    
    if name == 'openbsd_small':
        from .openbsd_small import openbsd_small
        return openbsd_small
    
    if name.startswith('OpenBSD'):
        from .openbsd import openbsd
        return openbsd
    
    if name.startswith('openEuler'):
        from .openeuler import openeuler
        return openeuler
    
    if name.startswith('OpenIndiana'):
        from .openindiana import openindiana
        return openindiana
    
    if name.startswith('openmamba'):
        from .openmamba import openmamba
        return openmamba
    
    if name.startswith('OpenMandriva'):
        from .openmandriva import openmandriva
        return openmandriva
    
    if name.startswith('OpenStage'):
        from .openstage import openstage
        return openstage
    
    if name.startswith('OpenWrt'):
        from .openwrt import openwrt
        return openwrt
    
    if name.startswith('Open Source Media Center') or name == 'osmc':
        from .open_source_media_center import open_source_media_center
        return open_source_media_center
    
    if name.startswith('OPNsense'):
        from .opnsense import opnsense
        return opnsense
    
    if name.startswith('Oracle'):
        from .oracle import oracle
        return oracle
    
    if name.startswith('orchid_small'):
        from .orchid_small import orchid_small
        return orchid_small
    
    if name.startswith('orchid'):
        from .orchid import orchid
        return orchid
    
    if name.startswith('OS Elbrus'):
        from .os_elbrus import os_elbrus
        return os_elbrus
    
    if name.startswith('PacBSD'):
        from .pacbsd import pacbsd
        return pacbsd
    
    if name.startswith('parabola_small'):
        from .parabola_small import parabola_small
        return parabola_small
    
    if name.startswith('Parabola'):
        from .parabola import parabola
        return parabola
    
    if name.startswith('Pardus'):
        from .pardus import pardus
        return pardus
    
    if name.startswith('Parrot'):
        from .parrot import parrot
        return parrot
    
    if name.startswith('Parsix'):
        from .parsix import parsix
        return parsix
    
    if name.startswith('PCBSD') or name.startswith('TrueOS'):
        from .pcbsd import pcbsd
        return pcbsd
    
    if name.startswith('PCLinuxOS'):
        from .pclinuxos import pclinuxos
        return pclinuxos
    
    if name.startswith('pearOS'):
        from .pearos import pearos
        return pearos
    
    if name.startswith('Pengwin'):
        from .pengwin import pengwin
        return pengwin
    
    if name.startswith('Peppermint'):
        from .peppermint import peppermint
        return peppermint
    
    if name.startswith('Pisi'):
        from .pisi import pisi
        return pisi
    
    if name.startswith('PNM Linux') or name.startswith('WHPNM Linux'):
        from .pnm_linux import pnm_linux
        return pnm_linux
    
    if name.startswith('popos_small') or name.startswith('pop_os_small'):
        from .popos_small import popos_small
        return popos_small
    
    if name.startswith('Pop!_OS') or name.startswith('popos') or name.startswith('pop_os'):
        from .pop__os import pop__os
        return pop__os
    
    if name.startswith('Porteus'):
        from .porteus import porteus
        return porteus
    
    if name == 'postmarketos_small':
        from .postmarketos_small import postmarketos_small
        return postmarketos_small
    
    if name.startswith('PostMarketOS'):
        from .postmarketos import postmarketos
        return postmarketos
    
    if name.startswith('PuffOS'):
        from .puffos import puffos
        return puffos
    
    if name.startswith('Proxmox'):
        from .proxmox import proxmox
        return proxmox
    
    if name.startswith('Puppy') or name.startswith('Quirky Werewolf') or name.startswith('Precise Puppy'):
        from .puppy import puppy
        return puppy
    
    if name.startswith('pureos_small'):
        from .pureos_small import pureos_small
        return pureos_small
    
    if name.startswith('PureOS'):
        from .pureos import pureos
        return pureos
    
    if name.startswith('Q4OS'):
        from .q4os import q4os
        return q4os
    
    if name.startswith('Qubes'):
        from .qubes import qubes
        return qubes
    
    if name.startswith('Qubyt'):
        from .qubyt import qubyt
        return qubyt
    
    if name.startswith('Quibian'):
        from .quibian import quibian
        return quibian
    
    if name.startswith('Radix'):
        from .radix import radix
        return radix
    
    if name.startswith('Raspbian_small'):
        from .raspbian_small import raspbian_small
        return raspbian_small
    
    if name.startswith('Raspbian'):
        from .raspbian import raspbian
        return raspbian
    
    if name == 'ravynOS':
        from .ravynos import ravynos
        return ravynos
    
    if name.startswith('Reborn OS') or name.startswith('Reborn'):
        from .reborn_os import reborn_os
        return reborn_os
    
    if name.startswith('Red Star') or name.startswith('Redstar'):
        from .red_star import red_star
        return red_star
    
    if name.startswith('Redcore'):
        from .redcore import redcore
        return redcore
    
    if name == 'redhat_old' or name.startswith('rhel_old'):
        from .redhat_old import redhat_old
        return redhat_old
    
    if name.startswith('Redhat') or name.startswith('Red Hat') or name.startswith('rhel'):
        from .redhat import redhat
        return redhat
    
    if name.startswith('Refracted Devuan') or name.startswith('Refracted_Devuan'):
        from .refracted_devuan import refracted_devuan
        return refracted_devuan
    
    if name.startswith('Regata'):
        from .regata import regata
        return regata
    
    if name.startswith('Regolith'):
        from .regolith import regolith
        return regolith
    
    if name.startswith('rocky_small'):
        from .rocky_small import rocky_small
        return rocky_small
    
    if name.startswith('rocky'):
        from .rocky import rocky
        return rocky
    
    if name.startswith('Rosa'):
        from .rosa import rosa
        return rosa
    
    if name.startswith('sabotage'):
        from .sabotage import sabotage
        return sabotage
    
    if name.startswith('Sabayon'):
        from .sabayon import sabayon
        return sabayon
    
    if name.startswith('Sailfish'):
        from .sailfish import sailfish
        return sailfish
    
    if name.startswith('SalentOS'):
        from .salentos import salentos
        return salentos
    
    if name.startswith('ShastraOS'):
        from .shastraos import shastraos
        return shastraos
    
    if name.startswith('Scientific'):
        from .scientific import scientific
        return scientific
    
    if name.startswith('Septor'):
        from .septor import septor
        return septor
    
    if name.startswith('Serene'):
        from .serene import serene
        return serene
    
    if name.startswith('SharkLinux'):
        from .sharklinux import sharklinux
        return sharklinux
    
    if name.startswith('Siduction'):
        from .siduction import siduction
        return siduction
    
    if name.startswith('slackware_small'):
        from .slackware_small import slackware_small
        return slackware_small
    
    if name.startswith('Slackware'):
        from .slackware import slackware
        return slackware
    
    if name.startswith('SliTaz'):
        from .slitaz import slitaz
        return slitaz
    
    if name.startswith('SmartOS'):
        from .smartos import smartos
        return smartos
    
    if name.startswith('SkiffOS'):
        from .skiffos import skiffos
        return skiffos
    
    if name.startswith('Solus'):
        from .solus import solus
        return solus
    
    if name.startswith('Sulin'):
        from .sulin import sulin
        return sulin
    
    if name.startswith('Source Mage') or name.startswith('Source_Mage'):
        from .source_mage import source_mage
        return source_mage
    
    if name.startswith('Sparky'):
        from .sparky import sparky
        return sparky
    
    if name.startswith('Star'):
        from .star import star
        return star
    
    if name.startswith('SteamOS'):
        from .steamos import steamos
        return steamos
    
    if name == 'sunos_small' or name == 'solaris_small':
        from .sunos_small import sunos_small
        return sunos_small
    
    if name == 'SunOS' or name == 'Solaris':
        from .sunos import sunos
        return sunos
    
    if name.startswith('openSUSE Leap') or name.startswith('openSUSE_Leap'):
        from .opensuse_leap import opensuse_leap
        return opensuse_leap
    
    if name.startswith('t2'):
        from .t2 import t2
        return t2
    
    if name.startswith('openSUSE Tumbleweed') or name.startswith('openSUSE_Tumbleweed'):
        from .opensuse_tumbleweed import opensuse_tumbleweed
        return opensuse_tumbleweed
    
    if name == 'opensuse_small' or name.startswith('suse_small'):
        from .opensuse_small import opensuse_small
        return opensuse_small
    
    if name.startswith('openSUSE') or name.startswith('open SUSE') or name.startswith('SUSE'):
        from .opensuse import opensuse
        return opensuse
    
    if name.startswith('parch') or name.startswith('Parch') or name.startswith('PARCH'):
        from .parch import parch
        return parch
    
    if name.startswith('SwagArch'):
        from .swagarch import swagarch
        return swagarch
    
    if name.startswith('Tails'):
        from .tails import tails
        return tails
    
    if name.startswith('TorizonCore'):
        from .torizoncore import torizoncore
        return torizoncore
    
    if name.startswith('Trisquel'):
        from .trisquel import trisquel
        return trisquel
    
    if name.startswith('Twister'):
        from .twister import twister
        return twister
    
    if name.startswith('Ubuntu Cinnamon') or name.startswith('Ubuntu-Cinnamon'):
        from .ubuntu_cinnamon import ubuntu_cinnamon
        return ubuntu_cinnamon
    
    if name.startswith('Ubuntu Budgie') or name.startswith('Ubuntu-Budgie'):
        from .ubuntu_budgie import ubuntu_budgie
        return ubuntu_budgie
    
    if name.startswith('Ubuntu-GNOME'):
        from .ubuntu_gnome import ubuntu_gnome
        return ubuntu_gnome
    
    if name.startswith('Ubuntu Kylin') or name.startswith('Ubuntu-Kylin'):
        from .ubuntu_kylin import ubuntu_kylin
        return ubuntu_kylin
    
    if name.startswith('Ubuntu Touch'):
        from .ubuntu_touch import ubuntu_touch
        return ubuntu_touch
    
    if name.startswith('Ubuntu MATE') or name.startswith('Ubuntu-MATE'):
        from .ubuntu_mate import ubuntu_mate
        return ubuntu_mate
    
    if name == 'ubuntu_old02':
        from .ubuntu_old02 import ubuntu_old02
        return ubuntu_old02
    
    if name.startswith('Ubuntu Studio') or name == 'Ubuntu-Studio':
        from .ubuntu_studio import ubuntu_studio
        return ubuntu_studio
    
    if name.startswith('Ubuntu Sway') or name == 'Ubuntu-Sway':
        from .ubuntu_sway import ubuntu_sway
        return ubuntu_sway
    
    if name == 'ubuntu_small':
        from .ubuntu_small import ubuntu_small
        return ubuntu_small
    
    if name.startswith('Ubuntu_old') or name.startswith('i3buntu'):
        from .ubuntu_old import ubuntu_old
        return ubuntu_old
    
    if name.startswith('Ubuntu'):
        from .ubuntu import ubuntu
        return ubuntu
    
    if name.startswith('Ultramarine Linux') or name.startswith('ultramarine'):
        from .ultramarine_linux import ultramarine_linux
        return ultramarine_linux
    
    if name.startswith('Univalent'):
        from .univalent import univalent
        return univalent
    
    if name.startswith('Uos'):
        from .uos import uos
        return uos
    
    if name.startswith('Univention'):
        from .univention import univention
        return univention
    
    if name.startswith('uwuntu'):
        from .uwuntu import uwuntu
        return uwuntu
    
    if name.startswith('Venom'):
        from .venom import venom
        return venom
    
    if name == 'void_small':
        from .void_small import void_small
        return void_small
    
    if name.startswith('Void'):
        from .void import void
        return void
    
    if name.startswith('VNux'):
        from .vnux import vnux
        return vnux
    
    if name.startswith('VzLinux'):
        from .vzlinux import vzlinux
        return vzlinux
    
    if name.startswith('yiffOS'):
        from .yiffos import yiffos
        return yiffos
    
    if name.startswith('semc'):
        from .semc import semc
        return semc
    
    if name.startswith('Vanilla'):
        from .vanilla import vanilla
        return vanilla
    
    if name.startswith('Obarun'):
        from .obarun import obarun
        return obarun
    
    if (name.startswith('wii-linux-ngx') or name.endswith('wii-linux-ngx')) or (name.startswith('whiite-linux') or name.endswith('whiite-linux')) or (name.startswith('gc-linux') or name.endswith('gc-linux')):
        from .wii_linux_ngx import wii_linux_ngx
        return wii_linux_ngx
    
    if (name.startswith('[Windows 11]') or name.endswith('[Windows 11]')) or (name.startswith('on Windows 11') or name.endswith('on Windows 11')) or name.startswith('Windows 11') or name == 'windows11':
        from .windows_11 import windows_11
        return windows_11
    
    if (name.startswith('[Windows 10]') or name.endswith('[Windows 10]')) or (name.startswith('on Windows 10') or name.endswith('on Windows 10')) or name.startswith('Windows 8') or name.startswith('Windows 10') or name == 'windows10' or name == 'windows8':
        from .windows_10 import windows_10
        return windows_10
    
    if name.startswith('Windows'):
        from .windows import windows
        return windows
    
    if name.startswith('Xubuntu'):
        from .xubuntu import xubuntu
        return xubuntu
    
    if name.startswith('Soda'):
        from .soda import soda
        return soda
    
    if name.startswith('KrassOS') or name.startswith('Krass'):
        from .krassos import krassos
        return krassos
    
    if name.startswith('IRIX'):
        from .irix import irix
        return irix
    
    if name.startswith('Zorin'):
        from .zorin import zorin
        return zorin
    
    if name.endswith('BSD'):
        from .bsd import bsd
        return bsd
    
    if name == 'Darwin':
        from .darwin import darwin
        return darwin
    
    if name.startswith('GNU'):
        from .gnu import gnu
        return gnu
    
    if name == 'Linux':
        from .linux import linux
        return linux
    
    if name.startswith('Profelis SambaBOX') or name.startswith('SambaBOX'):
        from .profelis_sambabox import profelis_sambabox
        return profelis_sambabox
    
    if name == 'SunOS':
        from .sunos import sunos
        return sunos
    